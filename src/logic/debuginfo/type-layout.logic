//----------------------------------------------------------------------
// Analyze composite type for members and inheritance
//----------------------------------------------------------------------

// Compute non-empty member name
di:member_type_entry:name[DIField] = FieldName <-
   di:member_type_entry(DIField),
   ( di:type_entry:name[DIField] = FieldName
   ; (!di:type_entry:name[DIField] = _, FieldName = "<empty>")).

// Member with name, type, and offset
di_member(DIField, FieldName, FieldType, FieldOffset) <-
   di:member_type_entry(DIField),
   di:member_type_entry:name[DIField] = FieldName,
   di:derived_type_base[DIField] = FieldType,
   di:type_entry:bit_offset[DIField] = FieldOffset.

// Nth field of type properties
di:type:field_name[DIType, Index] = FieldName
 , di:type:field_type[DIType, Index] = DIFieldType
 , di:type:field_offset[DIType, Index] = FieldOffset
 <-
   di_member(DIField, FieldName, DIFieldType, FieldOffset),
   di:composite_type_entry:field[DIType, Index] = DIField.

// Nth field of type is static
di:type:static_field[DIType, Index] = DIField
 <-
   di:type_entry:is_static_member(DIField),
   di:composite_type_entry:field[DIType, Index] = DIField.

// Inheritance of type at offset
di_inheritance(DIInheritance, DIType, Offset)
 <-
   di:inheritance_type_entry(DIInheritance),
   di:derived_type_base[DIInheritance] = DIType,
   di:type_entry:bit_offset[DIInheritance] = Offset.

// Type inheritance properties
di:type:inheritance_type[DIType, Index] = DIBaseType
 , di:type:inheritance_offset[DIType, Index] = Offset
 <-
   di_inheritance(DIInheritance, DIBaseType, Offset),
   di:composite_type_entry:field[DIType, Index] = DIInheritance.
