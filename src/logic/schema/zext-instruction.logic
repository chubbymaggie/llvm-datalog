// http://llvm.org/docs/LangRef.html#zext-to-instruction
// keywords: conversion; unary; instruction

zext_instruction(Insn) -> instruction(Insn).

zext_instruction:from[Insn] = Value ->
   zext_instruction(Insn), operand(Value).

zext_instruction:to_type[Insn] = Type ->
   zext_instruction(Insn), type(Type).

zext_instruction:from_type[Insn] = Type <-
   zext_instruction:from[Insn] = Value,
   operand:type[Value] = Type.


//------------------------------------------------------------------------------
// [Constraints]
//
// 1) The ‘zext‘ instruction takes:
//      (i)  a value to cast,
//      (ii) and a type to cast it to.
//
// 2) Both source and destination types must be:
//      (i)  integers or
//      (ii) vectors of the same number of integers.
//
// 3) The source type must be smaller than the destination type.
//------------------------------------------------------------------------------

schema:sanity()
 , zext_instruction(Insn)
 ->
   zext_instruction:from[Insn] = _.

schema:sanity()
 , zext_instruction(Insn)
 ->
   zext_instruction:to_type[Insn] = _.

schema:sanity()
 , zext_instruction:to_type[Insn] = Type
 ->
   instruction:type[Insn] = Type.

schema:sanity()
 , zext_instruction:from_type[_] = Type
 ->
   integer_type(Type); vector_type:integer(Type).

schema:sanity()
 , zext_instruction:to_type[_] = Type
 ->
   integer_type(Type); vector_type:integer(Type).

schema:sanity()
 , zext_instruction(Insn)
 , zext_instruction:from_type[Insn] = From
 , zext_instruction:to_type[Insn] = To
 ->
   vector:compatible(From, To).
